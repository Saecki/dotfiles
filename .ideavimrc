let mapleader = "\<space>"

"Settings
set ideajoin
set incsearch
set hlsearch
set scrolloff=3
set number
set relativenumber
set ignorecase

" Quick save
nmap <leader>w :w<cr>

" Stop searching
vmap <s-h> :nohlsearch<cr>
nmap <s-h> :nohlsearch<cr>

" Copy paste
nnoremap Y     y$
vnoremap <c-c> "+y'
inoremap <c-v> <c-r>+

" Jumps
nmap <c-o> <Action>(Back)
nmap <c-i> <Action>(Forward)

" Goto
nmap gd <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gr <Action>(FindUsages)
nmap gy <Action>(GotoTypeDeclaration)
nmap g[ <Action>(GotoPreviousError)
nmap g] <Action>(GotoNextError)
nmap g{ <Action>(VcsShowPrevChangeMarker)
nmap g} <Action>(VcsShowNextChangeMarker)

" Vcs
nmap <leader>gu <Action>(Vcs.RollbackChangedLines)
nmap <leader>gs <Action>(VcsShowCurrentChangeMarker)

" Code actions
nmap <leader>r <Action>(RenameElement)
nmap <leader>a <Action>(ShowIntentionActions)
" Search
nmap <leader>s <Action>(FindInPath)

" Open files
nmap <c-p> <Action>(SearchEverywhere)
nnoremap <leader><leader> <c-s-6>

" Select occurences
vmap <a-k> <Action>(UnselectPreviousOccurrence)
